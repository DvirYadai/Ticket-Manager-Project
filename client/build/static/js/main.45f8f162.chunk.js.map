{"version":3,"sources":["Components/Ticket.js","Components/NewTicket.js","Components/Header.js","Components/SortMenu.js","Components/SnackBarError.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Ticket","tickets","setTickets","ticket","setCounter","counter","setOpenSnackBar","setIsServerDown","useState","showLess","setShowLess","done","setDone","showButtons","setShowButtons","hideButton","e","target","parentNode","ticketIndex","Array","from","document","querySelectorAll","indexOf","tempTicketsArr","splice","doneButton","a","axios","patch","_id","toJSON","message","deleteButton","delete","res","data","sort","b","Date","creationTime","className","onMouseEnter","isMobile","onMouseLeave","onClick","CheckBox","fontSize","CheckBoxOutlineBlank","DeleteForever","title","content","length","slice","userEmail","toLocaleString","labels","map","label","i","NewTicket","setOpen","open","newTicket","titleRef","contentRef","emailRef","handleClose","submitButton","current","reportValidity","post","console","log","id","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","required","autoFocus","margin","fullWidth","inputRef","onChange","value","helperText","type","DialogActions","Button","color","Header","setSearchText","copyTicketArr","hiddenSpan","placeholder","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","SortMenu","React","anchorEl","setAnchorEl","aria-controls","aria-haspopup","variant","event","currentTarget","keepMounted","Boolean","MenuItem","ListItemText","primary","Alert","useStyles","makeStyles","theme","root","width","marginTop","spacing","SnackBarError","openSnackBar","isServerDown","classes","reason","Snackbar","autoHideDuration","severity","Main","searchText","firstUpdate","useRef","setCopyTicketArr","useEffect","get","App","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.45f8f162.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport {\r\n  CheckBox,\r\n  CheckBoxOutlineBlank,\r\n  DeleteForever,\r\n} from \"@material-ui/icons\";\r\n\r\nexport default function Ticket({\r\n  tickets,\r\n  setTickets,\r\n  ticket,\r\n  setCounter,\r\n  counter,\r\n  setOpenSnackBar,\r\n  setIsServerDown,\r\n}) {\r\n  const [showLess, setShowLess] = useState(true);\r\n  const [done, setDone] = useState(ticket.done);\r\n  const [showButtons, setShowButtons] = useState(false);\r\n\r\n  const hideButton = (e) => {\r\n    const target = e.target.parentNode.parentNode;\r\n    const ticketArr = Array.from(document.querySelectorAll(\".ticket\"));\r\n    const ticketIndex = ticketArr.indexOf(target);\r\n    const tempTicketsArr = [...tickets];\r\n    tempTicketsArr.splice(ticketIndex, 1);\r\n    setTickets(tempTicketsArr);\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const doneButton = async () => {\r\n    if (done) {\r\n      try {\r\n        await axios.patch(`/api/tickets/${ticket._id}/undone`);\r\n        setDone(false);\r\n      } catch (error) {\r\n        if (error.toJSON().message === \"Network Error\") {\r\n          setIsServerDown(false);\r\n          setOpenSnackBar(true);\r\n        } else {\r\n          setIsServerDown(true);\r\n          setOpenSnackBar(true);\r\n        }\r\n      }\r\n    } else {\r\n      try {\r\n        await axios.patch(`/api/tickets/${ticket._id}/done`);\r\n        setDone(true);\r\n      } catch (error) {\r\n        if (error.toJSON().message === \"Network Error\") {\r\n          setIsServerDown(false);\r\n          setOpenSnackBar(true);\r\n        } else {\r\n          setIsServerDown(true);\r\n          setOpenSnackBar(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteButton = async () => {\r\n    try {\r\n      const res = await axios.delete(`/api/tickets/${ticket._id}`);\r\n      res.data.sort((a, b) => {\r\n        return new Date(b.creationTime) - new Date(a.creationTime);\r\n      });\r\n      setTickets(res.data);\r\n    } catch (error) {\r\n      if (error.toJSON().message === \"Network Error\") {\r\n        setIsServerDown(false);\r\n        setOpenSnackBar(true);\r\n      } else {\r\n        setIsServerDown(true);\r\n        setOpenSnackBar(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"ticket\"\r\n      onMouseEnter={isMobile ? null : () => setShowButtons(true)}\r\n      onMouseLeave={isMobile ? null : () => setShowButtons(false)}\r\n    >\r\n      {isMobile ? (\r\n        <div className=\"ticket-buttons\">\r\n          <button className=\"hideTicketButton\" onClick={(e) => hideButton(e)}>\r\n            Hide\r\n          </button>\r\n          {done ? (\r\n            <CheckBox\r\n              fontSize=\"large\"\r\n              className=\"done-button\"\r\n              onClick={doneButton}\r\n            />\r\n          ) : (\r\n            <CheckBoxOutlineBlank\r\n              fontSize=\"large\"\r\n              className=\"done-button\"\r\n              onClick={doneButton}\r\n            />\r\n          )}\r\n          <DeleteForever\r\n            fontSize=\"large\"\r\n            className=\"delete-button\"\r\n            onClick={deleteButton}\r\n          />\r\n        </div>\r\n      ) : (\r\n        showButtons && (\r\n          <div className=\"ticket-buttons\">\r\n            <button className=\"hideTicketButton\" onClick={(e) => hideButton(e)}>\r\n              Hide\r\n            </button>\r\n            {done ? (\r\n              <CheckBox\r\n                fontSize=\"large\"\r\n                className=\"done-button\"\r\n                onClick={doneButton}\r\n              />\r\n            ) : (\r\n              <CheckBoxOutlineBlank\r\n                fontSize=\"large\"\r\n                className=\"done-button\"\r\n                onClick={doneButton}\r\n              />\r\n            )}\r\n            <DeleteForever\r\n              fontSize=\"large\"\r\n              className=\"delete-button\"\r\n              onClick={deleteButton}\r\n            />\r\n          </div>\r\n        )\r\n      )}\r\n      <h3>{ticket.title}</h3>\r\n      <p>\r\n        {showLess && ticket.content.length > 400\r\n          ? `${ticket.content.slice(0, 400)}...`\r\n          : ticket.content}\r\n      </p>\r\n      {ticket.content.length > 400 ? (\r\n        <span className=\"show-more-span\" onClick={() => setShowLess(!showLess)}>\r\n          {showLess ? \"Show more..\" : \"Show less..\"}\r\n        </span>\r\n      ) : null}\r\n      <div className=\"ticket-info\">\r\n        <p>{`By ${ticket.userEmail} | ${new Date(\r\n          ticket.creationTime\r\n        ).toLocaleString()}`}</p>\r\n        {ticket.labels ? (\r\n          <ul>\r\n            {ticket.labels.map((label, i) => {\r\n              return (\r\n                <li className=\"label\" key={`labelKey #${i}`}>\r\n                  {label}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n","import \"../App.css\";\r\nimport React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nexport default function NewTicket({\r\n  setOpen,\r\n  open,\r\n  setTickets,\r\n  setOpenSnackBar,\r\n  setIsServerDown,\r\n}) {\r\n  const newTicket = {\r\n    title: \"\",\r\n    content: \"\",\r\n    userEmail: \"\",\r\n    done: false,\r\n    creationTime: new Date(),\r\n    labels: [],\r\n  };\r\n\r\n  let titleRef = {};\r\n  let contentRef = {};\r\n  let emailRef = {};\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const submitButton = async () => {\r\n    if (\r\n      titleRef.current.reportValidity() &&\r\n      contentRef.current.reportValidity() &&\r\n      emailRef.current.reportValidity()\r\n    ) {\r\n      try {\r\n        const res = await axios.post(\"/api/tickets/post\", newTicket);\r\n        console.log(res);\r\n        res.data.sort((a, b) => {\r\n          return new Date(b.creationTime) - new Date(a.creationTime);\r\n        });\r\n        setTickets(res.data);\r\n      } catch (error) {\r\n        if (error.toJSON().message === \"Network Error\") {\r\n          setIsServerDown(false);\r\n          setOpenSnackBar(true);\r\n        } else {\r\n          setIsServerDown(true);\r\n          setOpenSnackBar(true);\r\n        }\r\n      }\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"new-ticket\">\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add New Ticket</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please fill out the form below, notice the require fields!\r\n          </DialogContentText>\r\n          <TextField\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            inputRef={titleRef}\r\n            onChange={(e) => (newTicket.title = e.target.value)}\r\n            helperText=\"At least 10 character\"\r\n          />\r\n          <TextField\r\n            required\r\n            margin=\"dense\"\r\n            id=\"content\"\r\n            label=\"Content\"\r\n            fullWidth\r\n            inputRef={contentRef}\r\n            onChange={(e) => (newTicket.content = e.target.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            inputRef={emailRef}\r\n            onChange={(e) => (newTicket.userEmail = e.target.value)}\r\n            helperText={`Must include '@'`}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={submitButton} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import \"../App.css\";\r\nimport React, { useState } from \"react\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport NewTicket from \"./NewTicket\";\r\n\r\nexport default function Header({\r\n  setSearchText,\r\n  tickets,\r\n  counter,\r\n  setCounter,\r\n  setTickets,\r\n  copyTicketArr,\r\n  setOpenSnackBar,\r\n  setIsServerDown,\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const restoreButton = () => {\r\n    copyTicketArr.sort((a, b) => {\r\n      return new Date(b.creationTime) - new Date(a.creationTime);\r\n    });\r\n    setTickets(copyTicketArr);\r\n    setCounter(0);\r\n  };\r\n\r\n  const hiddenSpan = (\r\n    <span>\r\n      (<span id=\"hideTicketsCounter\">{counter}</span> hidden tickets -{\" \"}\r\n      <button id=\"restoreHideTickets\" onClick={restoreButton}>\r\n        restore\r\n      </button>{\" \"}\r\n      )\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div id=\"header\">\r\n      <h1>Tickets Manager</h1>\r\n      <input\r\n        placeholder=\"Search tickets by title\"\r\n        id=\"searchInput\"\r\n        onChange={(e) => setSearchText(e.target.value)}\r\n      ></input>\r\n      <AddCircleIcon\r\n        fontSize=\"large\"\r\n        className=\"add-button\"\r\n        onClick={handleClickOpen}\r\n      />\r\n      <NewTicket\r\n        setOpen={setOpen}\r\n        open={open}\r\n        setTickets={setTickets}\r\n        setOpenSnackBar={setOpenSnackBar}\r\n        setIsServerDown={setIsServerDown}\r\n      />\r\n      <p>\r\n        Showing {tickets.length} results {counter > 0 ? hiddenSpan : \"\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nexport default function SortMenu({ tickets, setTickets }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const oldToNew = () => {\r\n    const tempTicketsArr = [...tickets];\r\n    tempTicketsArr.sort((a, b) => {\r\n      return new Date(a.creationTime) - new Date(b.creationTime);\r\n    });\r\n    setTickets(tempTicketsArr);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const newToOld = () => {\r\n    const tempTicketsArr = [...tickets];\r\n    tempTicketsArr.sort((a, b) => {\r\n      return new Date(b.creationTime) - new Date(a.creationTime);\r\n    });\r\n    setTickets(tempTicketsArr);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sort-div\">\r\n      <Button\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        Sort By Date:\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem>\r\n          <ListItemText primary=\"New to old\" onClick={newToOld} />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemText primary=\"Old to new\" onClick={oldToNew} />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SnackBarError({\r\n  openSnackBar,\r\n  setOpenSnackBar,\r\n  isServerDown,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={openSnackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {isServerDown\r\n            ? \"Our servers are down at this moment, we are working to fix the issue\"\r\n            : \"Your are disconnected from the internet, please reconnect!\"}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import \"../App.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Ticket from \"./Ticket\";\r\nimport Header from \"./Header\";\r\nimport SortMenu from \"./SortMenu\";\r\nimport SnackBarError from \"./SnackBarError\";\r\n\r\nexport default function Main() {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const firstUpdate = useRef(true);\r\n  const [copyTicketArr, setCopyTicketArr] = useState([]);\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [isServerDown, setIsServerDown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async function getAllTickets() {\r\n      try {\r\n        const res = await axios.get(\"/api/tickets\");\r\n        res.data.sort((a, b) => {\r\n          return new Date(b.creationTime) - new Date(a.creationTime);\r\n        });\r\n        setTickets(res.data);\r\n        setCopyTicketArr(res.data);\r\n      } catch (error) {\r\n        if (error.toJSON().message === \"Network Error\") {\r\n          setIsServerDown(false);\r\n          setOpenSnackBar(true);\r\n        } else {\r\n          setIsServerDown(true);\r\n          setOpenSnackBar(true);\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    (async function getSpecificTicket() {\r\n      try {\r\n        const res = await axios.get(`/api/tickets?searchText=${searchText}`);\r\n        res.data.sort((a, b) => {\r\n          return new Date(b.creationTime) - new Date(a.creationTime);\r\n        });\r\n        setTickets(res.data);\r\n      } catch (error) {\r\n        if (error.toJSON().message === \"Network Error\") {\r\n          setIsServerDown(false);\r\n          setOpenSnackBar(true);\r\n        } else {\r\n          setIsServerDown(true);\r\n          setOpenSnackBar(true);\r\n        }\r\n      }\r\n    })();\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <Header\r\n        setSearchText={setSearchText}\r\n        setTickets={setTickets}\r\n        tickets={tickets}\r\n        setCounter={setCounter}\r\n        counter={counter}\r\n        copyTicketArr={copyTicketArr}\r\n        setOpenSnackBar={setOpenSnackBar}\r\n        setIsServerDown={setIsServerDown}\r\n      />\r\n      <div className=\"tickets-div\">\r\n        <SortMenu setTickets={setTickets} tickets={tickets} />\r\n        {tickets.map((ticket, i) => {\r\n          return (\r\n            <Ticket\r\n              key={`ticketKey #${i}`}\r\n              tickets={tickets}\r\n              setTickets={setTickets}\r\n              ticket={ticket}\r\n              setCounter={setCounter}\r\n              counter={counter}\r\n              setOpenSnackBar={setOpenSnackBar}\r\n              setIsServerDown={setIsServerDown}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <SnackBarError\r\n        openSnackBar={openSnackBar}\r\n        setOpenSnackBar={setOpenSnackBar}\r\n        isServerDown={isServerDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Main from \"./Components/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}